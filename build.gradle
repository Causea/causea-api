plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'jacoco'
}

apply plugin: 'idea'

group = 'org.igorski'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'com.auth0:auth0:1.19.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-oauth2-resource-server'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'org.springframework.security:spring-security-config'
	implementation group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: '2.2.5.RELEASE'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.4'
	implementation ('com.amazonaws:aws-java-sdk:1.12.22') {
		exclude group: 'com.amazonaws', module: 'aws-java-sdk-kinesisvideo'
	}
	compile group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.3.4'

	compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'

	testCompileOnly 'org.projectlombok:lombok:1.18.12'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

	testImplementation 'io.cucumber:cucumber-java8:5.1.3'
	testImplementation 'io.cucumber:cucumber-junit:5.1.3'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

configurations {
	cucumberRuntime {
		extendsFrom testImplementation
	}
}

task cucumber() {
	dependsOn assemble, compileTestJava
	doLast {
		javaexec {
			main = "io.cucumber.core.cli.Main"
			classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
			args = ['--plugin', 'pretty', '--glue', 'co.igorski.buyitapi', 'src/test/resources']
		}
	}
}

tasks.withType(Test) { Test task ->
	task.useJUnitPlatform { JUnitPlatformOptions options ->
		options.excludeTags 'IT','Smoke'
	}
	testLogging {
		events("passed", "skipped", "failed")
	}
}

task integrationTest(type: Test) { Test task ->
	task.useJUnitPlatform { JUnitPlatformOptions options ->
		options.includeTags 'IT'
	}
}

task smokeTest(type: Test) { Test task ->
	task.useJUnitPlatform { JUnitPlatformOptions options ->
		options.includeTags 'Smoke'
	}
}

task prepareDockerContext(type: Copy, dependsOn: build) {
	from 'src/docker'
	into 'build/'
}

build.finalizedBy(prepareDockerContext)